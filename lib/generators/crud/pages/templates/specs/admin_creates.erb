require "rails_helper"

describe "Admin creates <%= human_name.downcase %>" do
  include_context "admin password matches"

  scenario "from list page" do
    visit "/crud/<%= plural_name %>"
    click_on "New <%= human_name.titleize %>"
    expect(page).to have_css "h1", text: "New <%= human_name.titleize %>"
    expect(page).to have_css "a", text: "<%= human_name.titleize %> List"
    expect(page).to have_current_path new_crud_<%= singular_name%>_path
  end

  scenario "create with errors" do
    visit "/crud/<%= plural_name %>/new"
    click_on "create"
    expect(page).to have_css ".alert", text: "REPLACE_ME"
    expect(page).to have_current_path new_crud_<%= singular_name %>_path
  end

  scenario "create successfully" do
    visit "/crud/<%= plural_name %>/new"
    fill_in "REPLACE_ME", with: "REPLACE_ME"
    click_on "create"

    expect(page).to have_css ".notice", text: "<%= human_name.titleize %> created"

    <%= singular_name %> = <%= class_name %>.last
    expect(page).to have_current_path crud_<%= singular_name %>_path(<%= singular_name %>)

    actual_values = page.all("tr").map do |table_row|
      table_row.all("td").map(&:text)
    end

    expect(actual_values).to eq(
      [
        ["REPLACE_ME", "REPLACE_ME"],
        ["Created At", <%= singular_name %>.created_at.to_fs],
        ["Updated At", <%= singular_name %>.updated_at.to_fs]
      ]
    )
  end
end
